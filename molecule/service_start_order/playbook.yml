---
- name: Converge
  hosts: localhost
  gather_facts: false
  vars:
    groups:  # noqa var-naming[read-only]
      control:
        - localhost
    project_name: testsowait
    testsowait_services:
      c1:
        container_name: c1
        group: control
        enabled: true
        image: docker.io/library/busybox:latest
      c2:
        container_name: c2
        group: control
        enabled: true
        image: docker.io/library/busybox:latest
    kolla_container_engine: podman
    docker_common_options: {}
    kolla_service_start_priority:
      - c1
      - c2
  tasks:
    - name: Ensure c1 container is running
      become: true
      command: >-
        podman run -d --name c1 --health-cmd 'true' --health-interval 1s docker.io/library/busybox:latest tail -f /dev/null
      register: c1_run
      changed_when: c1_run.rc == 0
      failed_when: c1_run.rc not in [0,125]

    - name: Ensure c2 container exists
      become: true
      command: >-
        podman create --name c2 --health-cmd 'true' --health-interval 1s docker.io/library/busybox:latest tail -f /dev/null
      register: c2_create
      changed_when: c2_create.rc == 0
      failed_when: c2_create.rc not in [0,125]

    - name: Create systemd unit for c1
      become: true
      copy:
        dest: /etc/systemd/system/container-c1.service
        content: |
          [Unit]
          Description=c1
          [Service]
          ExecStart=/usr/bin/podman start -a c1
          ExecStop=/usr/bin/podman stop -t 10 c1
          Restart=always
          [Install]
          WantedBy=multi-user.target

    - name: Create systemd unit for c2
      become: true
      copy:
        dest: /etc/systemd/system/container-c2.service
        content: |
          [Unit]
          Description=c2
          [Service]
          ExecStart=/usr/bin/podman start -a c2
          ExecStop=/usr/bin/podman stop -t 10 c2
          Restart=always
          [Install]
          WantedBy=multi-user.target

    - name: Start c2 via systemd
      become: true
      command: systemctl start container-c2.service
      register: c2_systemd_start
      changed_when: c2_systemd_start.rc == 0
      failed_when: c2_systemd_start.rc != 0

    - name: Record c1 start time
      become: true
      command: >-
        podman inspect c1 --format '{% raw %}{{.State.StartedAt}}{% endraw %}'
      register: c1_start
      changed_when: false

    - name: Record c2 start time
      become: true
      command: >-
        podman inspect c2 --format '{% raw %}{{.State.StartedAt}}{% endraw %}'
      register: c2_start
      changed_when: false

    - name: Write start times file
      become: true
      copy:
        dest: /tmp/start_times.json
        content: "{{ {'c1': c1_start.stdout, 'c2': c2_start.stdout} | to_nice_json }}"

    - name: Run service-start-order role
      include_role:
        name: service-start-order
      vars:
        kolla_changed_containers:
          - c1
