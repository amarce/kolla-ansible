Podman Compatibility
====================

Kolla Ansible supports deployments with Podman.  Podman 4.9 renamed
some fields returned by ``podman inspect``.  ``PidMode`` became
``PidNS`` and ``CgroupnsMode`` became ``CgroupNS``.  Kolla Ansible now
accepts either name when comparing containers and passes the correct
``--pid`` and ``--cgroupns`` options to ``podman`` when creating
containers.

When using ``*_extra_volumes`` options, Kolla Ansible will automatically
create any missing host directories referenced by bind mounts with
permissions ``0755`` before starting containers.

Sequential container start
--------------------------

Systemd unit files generated by Podman use the naming pattern
``container-<name>.service``.  The ``service-start-order`` role installs
``After=`` and ``Requires=`` directives for these units so that services
start sequentially according to ``kolla_service_start_priority``. Each
service waits for the previous container to report a ``healthy`` state via
``podman inspect --format '{{.State.Health.Status}}'`` before starting. If
the check does not return ``healthy`` within
``kolla_service_start_wait_seconds`` seconds (45 by default), the next
service starts regardless. This ensures dependencies such as databases and
messaging back ends are available before the corresponding API services are
launched.

Unit files may be supplied either in ``/usr/lib/systemd/system`` or
``/etc/systemd/system``.  The ``service-start-order`` role detects services
based on the presence of a container.  Orphaned systemd unit files without a
matching container are ignored so stale units do not affect startup.  If a
running container lacks a unit file, ``service-start-order`` generates one
using ``podman generate systemd`` and installs it under
``/etc/systemd/system`` before applying the start-order overrides.

When ``enable_openvswitch`` is ``true`` the role verifies that the
``openvswitch_db`` and ``openvswitch_vswitchd`` containers exist, their unit
files are present, and ``ovs-vsctl --no-wait show`` succeeds before starting
dependent containers such as ``neutron_openvswitch_agent`` and
``nova_libvirt``.  Stale unit files without containers are ignored and do not
satisfy this check.  Setting ``enable_openvswitch`` to ``false`` removes these
services from the startup sequence.

One-shot cleanup containers
---------------------------

Cleanup containers like ``neutron_ovs_cleanup`` are started as normal
services.  They run at boot and create a marker file
``/tmp/kolla/neutron_ovs_cleanup/done`` so subsequent starts skip the
container until the host reboots.
