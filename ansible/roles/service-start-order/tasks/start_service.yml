- name: Check neutron_ovs_cleanup marker
  become: true
  stat:
    path: "{{ neutron_ovs_cleanup_marker_file }}"
  register: ovs_cleanup_marker
  when: item == 'neutron_ovs_cleanup'

- name: Check if {{ item }} unit file exists
  become: true
  stat:
    path: "/etc/systemd/system/{{ service_unit_map[item] }}.service"
  register: service_unit_etc
  when: item in service_unit_map

- name: Check if {{ item }} unit file exists in /usr/lib
  become: true
  stat:
    path: "/usr/lib/systemd/system/{{ service_unit_map[item] }}.service"
  register: service_unit_usr
  when:
    - item in service_unit_map
    - not service_unit_etc.stat.exists

- name: Start {{ item }} service
  become: true
  systemd:
    name: "{{ service_unit_map[item] }}.service"
    state: started
    enabled: true
  when:
    - item in service_unit_map
    - item != 'neutron_ovs_cleanup' or not ovs_cleanup_marker.stat.exists | default(false)
    - service_unit_etc.stat.exists or service_unit_usr.stat.exists | default(false)

- name: Wait for neutron_ovs_cleanup to finish
  become: true
  kolla_container_facts:
    action: get_containers_state
    container_engine: "{{ kolla_container_engine }}"
    name: neutron_ovs_cleanup
  register: cleanup_state
  retries: 12
  delay: 5
  until: cleanup_state.states.neutron_ovs_cleanup != 'running'
  when:
    - item == 'neutron_ovs_cleanup'
    - item in service_unit_map
    - service_unit_etc.stat.exists or service_unit_usr.stat.exists | default(false)
    - not ovs_cleanup_marker.stat.exists | default(false)
