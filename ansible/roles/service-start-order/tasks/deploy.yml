---
- name: Detect services with systemd units
  become: true
  stat:
    path: "/etc/systemd/system/{{ kolla_service_unit_prefix }}{{ item }}{{ kolla_service_unit_suffix }}.service"
  loop: "{{ kolla_service_start_priority }}"
  register: service_units

- name: Build list of services with systemd units
  set_fact:
    start_order_services: "{{ service_units.results | json_query('[?stat.exists].item') }}"

- name: Build start order pairs
  set_fact:
    start_order_pairs: "{{ start_order_services[:-1] | zip(start_order_services[1:]) | list }}"

- name: Ensure helper script directory exists
  become: true
  ansible.builtin.file:
    path: /usr/local/lib/kolla
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Install wait helper script
  become: true
  ansible.builtin.template:
    src: wait-unit-and-container-healthy.sh.j2
    dest: /usr/local/lib/kolla/wait-unit-and-container-healthy.sh
    owner: root
    group: root
    mode: "0755"

- name: Ensure override directories exist
  become: true
  file:
    path: "/etc/systemd/system/{{ kolla_service_unit_prefix }}{{ item.1 }}{{ kolla_service_unit_suffix }}.service.d"
    state: directory
  loop: "{{ start_order_pairs }}"
  notify: Reload systemd

- name: Ensure alias override directories exist
  become: true
  file:
    path: "/etc/systemd/system/kolla-{{ item.1 }}-container.service.d"
    state: directory
  loop: "{{ start_order_pairs }}"
  when: kolla_container_engine == 'podman'
  notify: Reload systemd

- name: Configure start order overrides
  become: true
  template:
    src: start-order.conf.j2
    dest: "/etc/systemd/system/{{ kolla_service_unit_prefix }}{{ item.1 }}{{ kolla_service_unit_suffix }}.service.d/start-order.conf"
    mode: "0644"
  loop: "{{ start_order_pairs }}"
  register: start_order_override_result
  notify: Reload systemd

- name: Configure alias start order overrides
  become: true
  template:
    src: start-order.conf.j2
    dest: "/etc/systemd/system/kolla-{{ item.1 }}-container.service.d/start-order.conf"
    mode: "0644"
  loop: "{{ start_order_pairs }}"
  when: kolla_container_engine == 'podman'
  notify: Reload systemd
  vars:
    kolla_service_unit_prefix: "kolla-"
    kolla_service_unit_suffix: "-container"

- name: Reload systemd after applying overrides
  meta: flush_handlers

- name: Build restart list for changed overrides
  set_fact:
    start_order_restart_services: "{{ start_order_override_result.results | selectattr('changed') | map(attribute='item.1') | list }}"
  when: start_order_override_result is defined

- name: Add changed containers to restart list
  set_fact:
    changed_restart_services: "{{ kolla_service_start_priority |
      select('in', (kolla_changed_containers | default([]))) | list }}"

- name: Merge restart candidates
  set_fact:
    start_order_restart_services: "{{ (start_order_restart_services |
      default([]) + changed_restart_services) | unique }}"

- name: Show restart candidates
  debug:
    msg: "Services queued for restart: {{ start_order_restart_services }}"
  when: (start_order_restart_services | default([])) | length > 0

- name: Restart services if start order changed
  vars:
    restart_services: "{{ start_order_restart_services | default([]) }}"
  include_tasks: restart_service.yml
  loop: "{{ restart_services }}"
  loop_control:
    loop_var: svc
    label: "{{ svc }}"

- name: Start compute services in order
  include_tasks: start_service.yml
  loop: "{{ kolla_service_start_priority }}"
  loop_control:
    label: "{{ item }}"
  when: item not in (start_order_restart_services | default([]))
