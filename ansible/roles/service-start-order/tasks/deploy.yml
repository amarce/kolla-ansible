---
- name: Detect services with systemd units
  become: true
  stat:
    path: "{{ item.0 }}/{{ kolla_service_unit_prefix }}{{ item.1 }}{{ kolla_service_unit_suffix }}.service"
  loop: "{{ kolla_service_unit_search_paths | product(kolla_service_start_priority) | list }}"
  register: service_units

- name: Build list of services with systemd units
  set_fact:
    existing_unit_services: "{{ service_units.results | json_query('[?stat.exists].item[1]') | unique }}"

- name: Gather running containers
  become: true
  command: "{{ kolla_container_engine }} ps --format '{{ '{{.Names}}' }}'"
  register: start_order_containers
  changed_when: false

- name: Determine services missing systemd units
  set_fact:
    missing_unit_services: "{{ kolla_service_start_priority | difference(existing_unit_services) | intersect(start_order_containers.stdout_lines) }}"

- name: Generate systemd units for containers lacking them
  include_tasks: generate_unit.yml
  loop: "{{ missing_unit_services }}"
  loop_control:
    loop_var: service_name
    label: "{{ service_name }}"
  vars:
    service_name: "{{ service_name }}"
  when:
    - kolla_container_engine == 'podman'
    - missing_unit_services | length > 0

- name: Build start order services
  set_fact:
    start_order_services: "{{ kolla_service_start_priority | select('in', existing_unit_services + missing_unit_services) | list }}"

- name: Build start order pairs
  set_fact:
    start_order_pairs: "{{ start_order_services[:-1] | zip(start_order_services[1:]) | list }}"

- name: Ensure override directories exist
  become: true
  file:
    path: "/etc/systemd/system/{{ kolla_service_unit_prefix }}{{ item.1 }}{{ kolla_service_unit_suffix }}.service.d"
    state: directory
  loop: "{{ start_order_pairs }}"
  notify: Reload systemd

- name: Configure start order overrides
  become: true
  template:
    src: start-order.conf.j2
    dest: "/etc/systemd/system/{{ kolla_service_unit_prefix }}{{ item.1 }}{{ kolla_service_unit_suffix }}.service.d/start-order.conf"
    mode: "0644"
  loop: "{{ start_order_pairs }}"
  notify: Reload systemd

- name: Detect systemd dependency cycles
  become: true
  command: "systemd-analyze verify {{ kolla_service_unit_prefix }}{{ item }}{{ kolla_service_unit_suffix }}.service"
  loop: "{{ start_order_services }}"
  loop_control:
    label: "{{ item }}"
  changed_when: false
  register: cycle_check
  failed_when: cycle_check.stderr is search('Cycle')

- name: Start compute services in order
  include_tasks: start_service.yml
  loop: "{{ kolla_service_start_priority }}"
  loop_control:
    label: "{{ item }}"
