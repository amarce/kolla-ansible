---
- name: Detect services with systemd units
  become: true
  stat:
    path: "/etc/systemd/system/{{ kolla_service_unit_prefix }}{{ item }}{{ kolla_service_unit_suffix }}.service"
  loop: "{{ kolla_service_start_priority }}"
  register: service_units

- name: Build list of services with systemd units
  set_fact:
    start_order_services: "{{ service_units.results | json_query('[?stat.exists].item') }}"

- name: Build start order pairs
  set_fact:
    start_order_pairs: "{{ start_order_services[:-1] | zip(start_order_services[1:]) | list }}"

- name: Ensure override directories exist
  become: true
  file:
    path: "/etc/systemd/system/{{ kolla_service_unit_prefix }}{{ item.1 }}{{ kolla_service_unit_suffix }}.service.d"
    state: directory
  loop: "{{ start_order_pairs }}"
  notify: Reload systemd

- name: Configure start order overrides
  become: true
  template:
    src: start-order.conf.j2
    dest: "/etc/systemd/system/{{ kolla_service_unit_prefix }}{{ item.1 }}{{ kolla_service_unit_suffix }}.service.d/start-order.conf"
    mode: "0644"
  loop: "{{ start_order_pairs }}"
  register: start_order_override_result
  notify: Reload systemd

- name: Build restart list for changed overrides
  set_fact:
    start_order_restart_services: "{{ start_order_override_result.results | selectattr('changed') | map(attribute='item.1') | list }}"
  when: start_order_override_result is defined

- name: Restart services if start order changed
  become: true
  vars:
    restart_services: "{{ (start_order_restart_services | default([])) | difference(kolla_changed_containers | default([])) }}"
  loop: "{{ restart_services }}"
  loop_control:
    loop_var: svc
    label: "{{ svc }}"
  block:
    - name: Restart {{ svc }} service
      systemd:
        name: "{{ kolla_service_unit_prefix }}{{ svc }}{{ kolla_service_unit_suffix }}.service"
        state: restarted
        daemon_reload: yes
      register: restart_result
  rescue:
    - name: Show {{ svc }} service status
      command: "systemctl status {{ kolla_service_unit_prefix }}{{ svc }}{{ kolla_service_unit_suffix }}.service"
      register: restart_status
      ignore_errors: true
    - name: Show {{ svc }} service journal
      command: "journalctl -u {{ kolla_service_unit_prefix }}{{ svc }}{{ kolla_service_unit_suffix }}.service -n 100"
      register: restart_journal
      ignore_errors: true
    - name: Fail restarting {{ svc }}
      fail:
        msg: "Failed to restart {{ svc }} service"
        data:
          status: "{{ restart_status.stdout }}"
          journal: "{{ restart_journal.stdout }}"

- name: Start compute services in order
  include_tasks: start_service.yml
  loop: "{{ kolla_service_start_priority }}"
  loop_control:
    label: "{{ item }}"
