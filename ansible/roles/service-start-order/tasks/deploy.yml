---
- name: Gather systemd service units
  become: true
  command: systemctl list-unit-files --type=service --no-legend
  register: service_units_cmd
  changed_when: false

- name: Initialize service unit map
  set_fact:
    service_unit_map: {}

- name: Remove Open vSwitch services when disabled
  set_fact:
    kolla_service_start_priority: "{{ kolla_service_start_priority | difference(['openvswitch_db', 'openvswitch_vswitchd', 'neutron_ovs_cleanup', 'neutron_openvswitch_agent']) }}"
  when:
    - not enable_openvswitch | bool

- name: Build map of services with systemd units
  set_fact:
    service_unit_map: "{{ service_unit_map | default({}) | combine({ item: unit_name }) }}"
  vars:
    candidate_units: >-
      {{
        (kolla_container_engine == 'podman')
        | ternary(['container-' + item + '.service', 'kolla-' + item + '-container.service'],
                  ['kolla-' + item + '-container.service'])
      }}
    unit_name: >-
      {{
        (candidate_units | select('in', service_units_cmd.stdout_lines | map('split') | map('first') | list)
         | list | first | default('')) | regex_replace('\\.service$','')
      }}
  loop: "{{ kolla_service_start_priority }}"
  when: unit_name != ''

- name: Ensure Open vSwitch units are present when enabled
  assert:
    that:
      - "'openvswitch_db' in service_unit_map"
      - "'openvswitch_vswitchd' in service_unit_map"
    fail_msg: >-
      Open vSwitch services are missing. Ensure the openvswitch role has
      deployed the required containers when enable_openvswitch is true.
  when: enable_openvswitch | bool

- name: Gather running containers
  become: true
  command: "{{ kolla_container_engine }} ps -a --format '{{ '{{.Names}}' }}'"
  register: start_order_containers
  changed_when: false

- name: Ensure Open vSwitch containers are present when enabled
  assert:
    that:
      - "'openvswitch_db' in start_order_containers.stdout_lines"
      - "'openvswitch_vswitchd' in start_order_containers.stdout_lines"
    fail_msg: >-
      Open vSwitch containers are missing. Ensure the openvswitch role has
      deployed the required containers when enable_openvswitch is true.
  when: enable_openvswitch | bool

- name: Determine services missing systemd units
  set_fact:
    missing_unit_services: "{{ kolla_service_start_priority | difference(service_unit_map.keys() | list) | intersect(start_order_containers.stdout_lines) }}"

- name: Generate systemd units for containers lacking them
  include_tasks: generate_unit.yml
  loop: "{{ missing_unit_services }}"
  loop_control:
    loop_var: service_name
    label: "{{ service_name }}"
  vars:
    service_name: "{{ service_name }}"
  when:
    - kolla_container_engine == 'podman'
    - missing_unit_services | length > 0

- name: Update service unit map with generated units
  set_fact:
    service_unit_map: "{{ service_unit_map | combine({ item: 'container-' + item }) }}"
  loop: "{{ missing_unit_services }}"
  when:
    - kolla_container_engine == 'podman'
    - missing_unit_services | length > 0

- name: Build start order services
  set_fact:
    start_order_services: "{{ kolla_service_start_priority | select('in', service_unit_map.keys() | list) | list }}"

- name: Build start order pairs
  set_fact:
    start_order_pairs: "{{ start_order_services[:-1] | zip(start_order_services[1:]) | list }}"

- name: Ensure override directories exist
  become: true
  file:
    path: "/etc/systemd/system/{{ service_unit_map[item.1] }}.service.d"
    state: directory
  loop: "{{ start_order_pairs }}"
  notify: Reload systemd

- name: Configure start order overrides
  become: true
  template:
    src: start-order.conf.j2
    dest: "/etc/systemd/system/{{ service_unit_map[item.1] }}.service.d/start-order.conf"
    mode: "0644"
  loop: "{{ start_order_pairs }}"
  notify: Reload systemd

- name: Detect systemd dependency cycles
  become: true
  command: "systemd-analyze verify {{ service_unit_map[item] }}.service"
  loop: "{{ start_order_services }}"
  loop_control:
    label: "{{ item }}"
  changed_when: false
  register: cycle_check
  failed_when: cycle_check.stderr is search('Cycle')

- name: Start compute services in order
  include_tasks: start_service.yml
  loop: "{{ kolla_service_start_priority }}"
  loop_control:
    label: "{{ item }}"
