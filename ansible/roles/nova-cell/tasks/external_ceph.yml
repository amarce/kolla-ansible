---
- name: Check nova keyring file
  vars:
    keyring: "{{ nova_cell_ceph_backend['cluster'] }}.client.{{ nova_cell_ceph_backend['vms']['user'] }}.keyring"
    paths:
      - "{{ node_custom_config }}/nova/{{ inventory_hostname }}/{{ keyring }}"
      - "{{ node_custom_config }}/nova/{{ keyring }}"
  stat:
    path: "{{ lookup('first_found', paths) }}"
  delegate_to: localhost
  register: nova_cephx_keyring_file
  failed_when: not nova_cephx_keyring_file.stat.exists
  when:
    - nova_backend == "rbd"
    - external_ceph_cephx_enabled | bool

- name: Ensure nova service ceph config subdir exists
  vars:
    service: "{{ nova_cell_services[item] }}"
  file:
    path: "{{ node_config_directory }}/{{ item }}/ceph"
    state: "directory"
    owner: "{{ config_owner_user }}"
    group: "{{ config_owner_group }}"
    mode: "0770"
  become: true
  when: service | service_enabled_and_mapped_to_host
  with_items:
    - nova-compute
    - nova-libvirt


- name: Copy over ceph nova keyring file
  vars:
    keyring: "{{ nova_cell_ceph_backend['cluster'] }}.client.{{ nova_cell_ceph_backend['vms']['user'] }}.keyring"
  template:
    src: "{{ nova_cephx_keyring_file.stat.path }}"
    dest: "{{ node_config_directory }}/nova-compute/ceph/{{ keyring }}"
    owner: "{{ config_owner_user }}"
    group: "{{ config_owner_group }}"
    mode: "0660"
  become: true
  when:
    - inventory_hostname in groups[nova_cell_compute_group]
    - nova_backend == "rbd"
    - external_ceph_cephx_enabled | bool

- name: Copy over ceph cinder keyring files
  vars:
    keyring: "{{ item.1.cluster }}.client.{{ item.1.user }}.keyring"
    service: "{{ nova_cell_services[item.0] }}"
  template:
    src: "{{ node_custom_config }}/nova/{{ keyring }}"
    dest: "{{ node_config_directory }}/{{ item.0 }}/ceph/{{ keyring }}"
    owner: "{{ config_owner_user }}"
    group: "{{ config_owner_group }}"
    mode: "0660"
  become: true
  when:
    - inventory_hostname in groups[nova_cell_compute_group]
    - external_ceph_cephx_enabled | bool
    - service | service_enabled_and_mapped_to_host
  with_nested:
    - [ 'nova-compute', 'nova-libvirt' ]
    - "{{ cinder_ceph_backends }}"

- name: Copy over ceph.conf
  vars:
    service: "{{ nova_cell_services[item.0] }}"
    cluster: "{{ item.1.cluster }}"
  merge_configs:
    sources:
      - "{{ node_custom_config }}/nova/{{ cluster }}.conf"
      - "{{ node_custom_config }}/nova/{{ item.0 }}/{{ cluster }}.conf"
    dest: "{{ node_config_directory }}/{{ item.0 }}/ceph/{{ cluster }}.conf"
    mode: "0660"
  become: true
  when:
    - service | service_enabled_and_mapped_to_host
    - nova_backend == "rbd" or cinder_backend_ceph | bool
  with_nested:
    - [ 'nova-compute', 'nova-libvirt' ]
    - "{{ cinder_ceph_backends + [nova_cell_ceph_backend] }}"

- block:
    - name: Ensure /etc/ceph directory exists (host libvirt)
      vars:
        paths:
          - "{{ node_custom_config }}/nova/{{ inventory_hostname }}/{{ nova_cell_ceph_backend['cluster'] }}.conf"
          - "{{ node_custom_config }}/nova/{{ nova_cell_ceph_backend['cluster'] }}.conf"
      file:
        path: "/etc/ceph/"
        state: "directory"
        owner: "root"
        group: "root"
        mode: "0755"
      become: true

    - name: Copy over ceph.conf (host libvirt)
      vars:
        paths:
          - "{{ node_custom_config }}/nova/{{ inventory_hostname }}/{{ item.cluster }}.conf"
          - "{{ node_custom_config }}/nova/{{ item.cluster }}.conf"
      template:
        src: "{{ lookup('first_found', paths) }}"
        dest: "/etc/ceph/{{ item.cluster }}.conf"
        owner: "root"
        group: "root"
        mode: "0644"
      become: true
      loop: "{{ cinder_ceph_backends + [nova_cell_ceph_backend] }}"
  when:
    - not enable_nova_libvirt_container | bool
    - inventory_hostname in groups[nova_cell_compute_group]
    - nova_backend == "rbd"

- block:
    - name: Ensuring libvirt secrets directory exists
      vars:
        service: "{{ nova_cell_services['nova-libvirt'] }}"
      file:
        path: "{{ libvirt_secrets_dir }}"
        state: "directory"
        owner: "{{ config_owner_user }}"
        group: "{{ config_owner_group }}"
        mode: "0770"
      become: true
      when: service | service_enabled_and_mapped_to_host

    - name: Pushing nova secret xml for libvirt
      vars:
        service: "{{ nova_cell_services['nova-libvirt'] }}"
      template:
        src: "secret.xml.j2"
        dest: "{{ libvirt_secrets_dir }}/{{ item.value.uuid }}.xml"
        owner: "{{ config_owner_user }}"
        group: "{{ config_owner_group }}"
        mode: "0600"
      become: true
      when:
        - service | service_enabled_and_mapped_to_host
        - nova_backend == 'rbd' or cinder_backend_ceph | bool
      loop: "{{ ceph_backend_secrets | default({}) | dict2items }}"
      notify: "{{ libvirt_restart_handlers }}"

    - name: Pushing secrets key for libvirt
      vars:
        service: "{{ nova_cell_services['nova-libvirt'] }}"
      template:
        src: "libvirt-secret.j2"
        dest: "{{ libvirt_secrets_dir }}/{{ item.value.uuid }}.base64"
        owner: "{{ config_owner_user }}"
        group: "{{ config_owner_group }}"
        mode: "0600"
      become: true
      when:
        - service | service_enabled_and_mapped_to_host
        - external_ceph_cephx_enabled | bool
        - nova_backend == 'rbd' or cinder_backend_ceph | bool
      loop: "{{ ceph_backend_secrets | default({}) | dict2items }}"
      notify: "{{ libvirt_restart_handlers }}"
      no_log: True
  vars:
    libvirt_secrets_dir: >-
      {{ (node_config_directory ~ '/nova-libvirt/secrets')
         if enable_nova_libvirt_container | bool
         else '/etc/libvirt/secrets' }}
    # NOTE(mgoddard): When running libvirt as a host daemon, on CentOS it
    # appears to pick up secrets automatically, while on Ubuntu it requires a
    # reload. This may be due to differences in tested versions of libvirt
    # (8.0.0 vs 6.0.0). Reload should be low overhead, so do it always.
    libvirt_restart_handlers: >-
      {{ ['Restart nova-libvirt container']
         if enable_nova_libvirt_container | bool else
         ['Reload libvirtd'] }}
