---
# Verify that container and systemd unit exist and are active
- name: Init status vars when undefined
  set_fact:
    container_missing: false
    unit_missing_or_disabled: false
  when: container_missing is not defined or unit_missing_or_disabled is not defined
- name: Set container and unit names
  set_fact:
    container_name: "{{ item.value.container_name | default(item.key) }}"
    unit_name: "kolla-{{ item.value.container_name | default(item.key) }}-container.service"

- name: Check container presence
  become: true
  command: >-
    {{ kolla_container_engine }}
    {{ 'container exists ' + container_name if kolla_container_engine == 'podman'
       else 'container inspect ' + container_name }}
  register: container_result
  changed_when: false
  failed_when: false

- name: Check unit enabled
  become: true
  command: systemctl is-enabled --quiet {{ unit_name }}
  register: unit_enabled
  changed_when: false
  failed_when: false

- name: Check unit active
  become: true
  command: systemctl is-active --quiet {{ unit_name }}
  register: unit_active
  changed_when: false
  failed_when: false

- name: Record container and unit status
  set_fact:
    container_missing: "{{ container_result.rc != 0 }}"
    unit_missing_or_disabled: "{{ unit_enabled.rc != 0 or unit_active.rc != 0 }}"
    needs_start: >-
      {{ container_result.rc != 0 or unit_enabled.rc != 0 or unit_active.rc != 0 }}

- name: Notify restart when needed
  debug:
    msg: Notifying restart handler
  changed_when: needs_start | bool
  notify: "Restart container"

- name: Flush restart handler
  meta: flush_handlers

- name: Ensure unit running when container exists
  become: true
  systemd:
    name: "{{ unit_name }}"
    state: restarted
    enabled: true
  when:
    - not container_missing
    - unit_active.rc != 0
