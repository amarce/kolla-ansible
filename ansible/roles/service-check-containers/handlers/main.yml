---
- name: Recreate container
  import_tasks: recreate.yml

- name: Start container immediately after (re)create
  become: true
  command: "{{ kolla_container_engine }} start {{ container_name }}"

- name: Ensure unit reflects new state
  become: true
  systemd:
    name: "{{ unit_name }}"
    state: restarted
  when: unit_enabled

- name: Recreate container when missing or drifted
  listen: Restart container
  when:
    - container_missing | bool or container_needs_recreate | bool
  import_tasks: recreate.yml
  notify: Restart unit as fallback

- name: Get container state
  listen: Restart container
  become: true
  kolla_container_facts:
    action: get_containers_state
    container_engine: "{{ kolla_container_engine }}"
    name: "{{ container_name }}"
  register: restart_container_state
  failed_when: false
  changed_when: false

- name: Attempt runtime restart first
  listen: Restart container
  become: true
  command: "{{ kolla_container_engine }} restart {{ container_name }}"
  register: runtime_restart
  failed_when: false
  changed_when: runtime_restart.rc == 0
  when:
    - not container_needs_recreate | bool
    - ((restart_container_state.states | default({}))[container_name] | default('')) == 'running'

- name: Ensure unit enabled
  listen: Restart container
  become: true
  systemd:
    name: "{{ unit_name }}"
    enabled: true
  when:
    - not container_needs_recreate | bool
    - ((restart_container_state.states | default({}))[container_name] | default('')) == 'running'
    - runtime_restart.rc != 0
    - unit_file.stat.isreg | default(false)
- name: Restart unit as fallback
  listen: Restart container
  become: true
  systemd:
    name: "{{ unit_name }}"
    state: restarted
  when:
    - not container_needs_recreate | bool
    - ((restart_container_state.states | default({}))[container_name] | default('')) == 'running'
    - runtime_restart.rc != 0
    - unit_file.stat.isreg | default(false)
